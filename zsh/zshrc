# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# If you come from bash you might have to change your $PATH.
export PATH=$HOME/go/bin:$HOME/.rbenv/bin:$HOME/.nodenv/bin:$HOME/.local/bin:/usr/local/bin:/usr/bin:$PATH:/usr/local/go/bin

typeset -U path
# path=(~/go/bin ~/.rbenv/bin ~/.nodenv/bin ~/.local/bin $path /usr/local/go/bin)
# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="agnoster"
ZSH_THEME="powerlevel10k/powerlevel10k"
#
# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="false"

# Uncomment the following line to display red dots whilst waiting for completion.
#COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
# if command -v fdfind > /dev/null; then
#   alias fd="fdfind"
#   export FZF_DEFAULT_COMMAND="fd --type f"
# fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'
# export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!.git/*"'
# export FZF_BASE=$HOME/.local/bin
# export FZF_BASE=/path/to/fzf/install/dir
plugins=(git fzf aws gpg-agent terraform ansible zsh-syntax-highlighting)

if [[ -f $ZSH/oh-my-zsh.sh ]]; then
  source $ZSH/oh-my-zsh.sh
fi


# User configuration
unsetopt share_history

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi
export EDITOR='nvim'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

if command -v "$HOME/.local/bin/hub" > /dev/null; then
  eval "$($HOME/.local/bin/hub alias -s)"
fi

fpath=(~/.zsh/custom ~/.zsh/completions $fpath)
autoload -U +X compinit && compinit
# autoload -Uz bashcompinit && bashcompinit
autoload -U +X bashcompinit && bashcompinit

# autoload -U compinit && compinit
# autoload -Uz bashcompinit && bashcompinit
#kitty + complete setup zsh | source /dev/stdin

# _fly_compl() {
# 	args=("${COMP_WORDS[@]:1:$COMP_CWORD}")
# 	local IFS=$'\n'
# 	COMPREPLY=($(GO_FLAGS_COMPLETION=1 ${COMP_WORDS[0]} "${args[@]}"))
# 	return 0
# }
# complete -F _fly_compl fly


export SHOW_AWS_PROMPT="true"
# if [[ -f /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]]; then
#     source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# fi
# export PATH="$HOME/.rbenv/bin:$PATH"
# if [[ -f rbenv ]]; then
eval "$(rbenv init -)"
# fi
eval "$(nodenv init -)"

export CHEF_ORG='litmus'
export CHEF_USER='bsykes'
export CHEF_URL_ROOT='https://chef.svadmin.com'
export TF_VAR_chef_username="${CHEF_USER}"
export TF_VAR_chef_user_key="${HOME}/.chef/${CHEF_ORG}-${CHEF_USER}.pem"

ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)


# autoload -U +X bashcompinit && bashcompinit
# if [[ -f $HOME/.local/bin/vault ]]; then
# complete -o nospace -C /home/hootieben/.local/bin/vault vault
# fi

# PIPX Completions
#eval "$(register-python-argcomplete pipx)"
#
#export ANSIBLE_VAULT_PASSWORD_FILE=/home/hootieben/.local/bin/ansible-vault-pass-client.py

export AWS_VAULT_BACKEND=pass
# export AWS_VAULT_PASS_PASSWORD_STORE_DIR=/home/hootieben/.local/share/gopass/stores/litmus
export AWS_VAULT_PASS_PASSWORD_STORE_DIR=/home/hootieben/.local/share/gopass/stores/root
export AWS_VAULT_PASS_CMD=gopass
export AWS_VAULT_PASS_PREFIX=AWS

# if [[ -f aws-vault ]]; then
# fi

# if [[ -f bat ]]; then
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
# fi

# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


# if [[ -f direnv ]]; then
eval "$(direnv hook zsh)"
export DIRENV_LOG_FORMAT=
# fi

# if [[ -f $HOME/.local/bin/aws_completer ]]; then
# fi
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# autoload -U compinit && compinit
# autoload -Uz bashcompinit && bashcompinit

# if [[ -f bat ]]; then
alias cat='bat --paging=never'
# fi

# if [[ -f op ]]; then
eval "$(op completion zsh)"; compdef _op op
# fi


complete -C '/home/hootieben/.local/bin/aws_completer' aws

# eval "$(aws-vault --completion-script-zsh)"
eval "$(aws-vault --completion-script-bash)"
# eval "$(jira --completion-script-zsh)"
eval "$(jira --completion-script-bash)"

# eval "$(fly completion --shell=zsh)"
eval "$(fly completion --shell=bash)"
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
#
#alias stg-deploy="ssh $(aws ec2 describe-instances --filters Name=tag:Name,Values="app02-stg" Name=instance-state-name,Values=running --query 'Reservations[].Instances[].PrivateIpAddress' --output text --no-cli-pager) -l deploy"
#alias stg-sys="ssh $(aws ec2 describe-instances --filters Name=tag:Name,Values="app02-stg" Name=instance-state-name,Values=running --query 'Reservations[].Instances[].PrivateIpAddress' --output text --no-cli-pager) -l ubuntu"
export PATH="/home/hootieben/repos/github.com/bigH/git-fuzzy/bin:$PATH"
